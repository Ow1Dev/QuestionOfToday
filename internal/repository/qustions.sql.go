// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: qustions.sql

package repository

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const getAnswerById = `-- name: GetAnswerById :one
SELECT answer, source_url, source_text FROM quest_of_today.questions where id = $1
`

type GetAnswerByIdRow struct {
	Answer     string
	SourceUrl  string
	SourceText string
}

func (q *Queries) GetAnswerById(ctx context.Context, id uuid.UUID) (GetAnswerByIdRow, error) {
	row := q.db.QueryRow(ctx, getAnswerById, id)
	var i GetAnswerByIdRow
	err := row.Scan(&i.Answer, &i.SourceUrl, &i.SourceText)
	return i, err
}

const getTodaysQuestion = `-- name: GetTodaysQuestion :one
SELECT id, question FROM quest_of_today.questions WHERE dato = $1
`

type GetTodaysQuestionRow struct {
	ID       uuid.UUID
	Question string
}

func (q *Queries) GetTodaysQuestion(ctx context.Context, dato pgtype.Date) (GetTodaysQuestionRow, error) {
	row := q.db.QueryRow(ctx, getTodaysQuestion, dato)
	var i GetTodaysQuestionRow
	err := row.Scan(&i.ID, &i.Question)
	return i, err
}
